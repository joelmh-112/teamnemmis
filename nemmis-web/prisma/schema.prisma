generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Translation {
  text_id       BigInt
  language_code language_code
  text          String        @db.Text
  Text          Text          @relation(fields: [text_id], references: [id])

  @@id([text_id, language_code])
  @@map("translations")
}

model Text {
  id               BigInt        @id @default(autoincrement())
  translation_id   BigInt
  EventDescription Event[]       @relation("eventDescription")
  EventTitle       Event[]       @relation("eventTitle")
  TeamDescription  Team[]        @relation("teamDescription")
  TeamTitle        Team[]        @relation("teamTitle")
  Translations     Translation[]

  @@map("texts")
}

model Team {
  id                  BigInt         @id @default(autoincrement())
  title_text_id       BigInt
  description_text_id BigInt
  TeamCategory        TeamCategory[]
  TeamMember          TeamMember[]

  Description Text @relation("teamDescription", fields: [description_text_id], references: [id])
  Title       Text @relation("teamTitle", fields: [title_text_id], references: [id])

  @@map("teams")
}

model TeamMember {
  id       BigInt @id @default(autoincrement())
  name     String @db.VarChar(20)
  surname1 String @db.VarChar(50)
  surname2 String @db.VarChar(50)
  alias    String @db.VarChar(20)
  team_id  BigInt
  team     Team   @relation(fields: [team_id], references: [id])

  @@index([team_id], map: "team_members_team_id_fkey")
  @@map("team_members")
}

model Event {
  id                  BigInt          @id @default(autoincrement())
  title_text_id       BigInt
  description_text_id BigInt
  date                DateTime
  EventCategory       EventCategory[]
  Description         Text            @relation("eventDescription", fields: [description_text_id], references: [id])
  Title               Text            @relation("eventTitle", fields: [title_text_id], references: [id])

  @@index([description_text_id], map: "events_description_text_id_fkey")
  @@index([title_text_id], map: "events_title_text_id_fkey")
  @@map("events")
}

model Post {
  id            BigInt         @id @default(autoincrement())
  title_text_id BigInt
  body_text_id  BigInt
  link          String
  PostCategory  PostCategory[]

  @@map("posts")
}

model Category {
  id                  BigInt          @id @default(autoincrement())
  title_text_id       BigInt
  description_text_id BigInt
  EventCategory       EventCategory[]
  PostCategory        PostCategory[]
  TeamCategory        TeamCategory[]

  @@map("categories")
}

model TeamCategory {
  id          BigInt   @id @default(autoincrement())
  team_id     BigInt
  category_id BigInt
  category    Category @relation(fields: [category_id], references: [id])
  team        Team     @relation(fields: [team_id], references: [id])

  @@index([category_id], map: "team_categories_category_id_fkey")
  @@index([team_id], map: "team_categories_team_id_fkey")
  @@map("team_categories")
}

model EventCategory {
  id          BigInt   @id @default(autoincrement())
  event_id    BigInt
  category_id BigInt
  category    Category @relation(fields: [category_id], references: [id])
  event       Event    @relation(fields: [event_id], references: [id])

  @@index([category_id], map: "event_categories_category_id_fkey")
  @@index([event_id], map: "event_categories_event_id_fkey")
  @@map("event_categories")
}

model PostCategory {
  id          BigInt   @id @default(autoincrement())
  post_id     BigInt
  category_id BigInt
  category    Category @relation(fields: [category_id], references: [id])
  post        Post     @relation(fields: [post_id], references: [id])

  @@index([category_id], map: "post_categories_category_id_fkey")
  @@index([post_id], map: "post_categories_post_id_fkey")
  @@map("post_categories")
}

model User {
  id           String     @id @default(cuid())
  google_uuid  String?    @db.VarChar(50)
  twitch_uuid  String?    @db.VarChar(50)
  discord_uuid String?    @db.VarChar(50)
  nickname     String     @db.VarChar(25)
  email        String     @db.VarChar(255)
  avatar       String     @db.Text
  UserRoles    UserRole[]
  Winner       Winner[]

  @@map("users")
}

model Role {
  id        Int        @id @default(autoincrement())
  name      String     @db.VarChar(25)
  UserRoles UserRole[]

  @@map("roles")
}

model UserRole {
  id      Int    @id @default(autoincrement())
  user_id String
  role_id Int
  role    Role   @relation(fields: [role_id], references: [id])
  user    User   @relation(fields: [user_id], references: [id])

  @@index([role_id], map: "user_roles_role_id_fkey")
  @@index([user_id], map: "user_roles_user_id_fkey")
  @@map("user_roles")
}

model Giveaway {
  id            BigInt          @id @default(autoincrement())
  name          String          @db.VarChar(255)
  start_date    DateTime
  due_date      DateTime
  GiveawayAward GiveawayAward[]

  @@map("giveaways")
}

model Award {
  id            BigInt          @id @default(autoincrement())
  name          String          @db.VarChar(255)
  GiveawayAward GiveawayAward[]

  @@map("awards")
}

model GiveawayAward {
  id          BigInt   @id @default(autoincrement())
  giveaway_id BigInt
  award_id    BigInt
  award       Award    @relation(fields: [award_id], references: [id])
  giveaway    Giveaway @relation(fields: [giveaway_id], references: [id])
  Winner      Winner[]

  @@index([award_id], map: "giveaway_awards_award_id_fkey")
  @@index([giveaway_id], map: "giveaway_awards_giveaway_id_fkey")
  @@map("giveaway_awards")
}

model Winner {
  id                BigInt        @id @default(autoincrement())
  giveaway_award_id BigInt
  user_id           String
  giveaway_award    GiveawayAward @relation(fields: [giveaway_award_id], references: [id])
  user              User          @relation(fields: [user_id], references: [id])

  @@index([giveaway_award_id], map: "winners_giveaway_award_id_fkey")
  @@index([user_id], map: "winners_user_id_fkey")
  @@map("winners")
}

enum language_code {
  es
  en
  ca
}
